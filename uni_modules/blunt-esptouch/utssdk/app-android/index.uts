
import { UDPClient, UDPServer } from './udp.uts'
import { useEspTouch } from '../../common/EspTouch.uts'

class UDPSocket {
	client: UDPClient;
	server: UDPServer;
	logger;
	
	constructor(listen=18266, logger=console) {
		this.logger = logger !== void 0 ? logger : console
		this.client = UDPClient
		this.server = new UDPServer(listen)
		this.logger.info("udp bind: " + listen)
	}
	
	getClient() {
		return this.client
	}
	
	handleMsg(obj: any) {
		this.server.listener((data) => {
            obj.receiveMsg(data)
        },
        (error) => {
            console.error(error);
        },)
	}
	
	async sendData(data,host,port,offset,len,timeout){
	  for(let i = offset; i< offset+len;i++){
	    if(data[i].length == 0){
	      continue;
	    }
	    // let option = {
	    //   address: host,
	    //   message: data[i].join(""),
	    //   port: port,
	    // }
	    // this.client.send(option);
	    // await Sleep(timeout);
	  }
	}
	sendDataSideBySide() {
		
	}
}

export class EsptouchTack {
	
}


export { useEspTouch }