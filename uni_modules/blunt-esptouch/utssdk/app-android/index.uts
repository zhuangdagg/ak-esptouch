
import { UDPServer } from './udp.uts'
import { useEspTouch, EsptouchTask } from '../../common/EspTouch.uts'
import { Sleep } from '../../common/util.uts'
import { getIP } from './getIP.uts'

class UDPSocket {
	client: UDPServer;
	
	constructor(private listen=18266) {
		this.client = new UDPServer(this.listen)
		// this.logger.info("udp bind: " + listen)
	}
	
	getClient(): UDPServer {
		return this.client
	}
	
	handleMsg(obj: EsptouchTask) {
		this.client.listener((data) => {
            obj.receiveMsg(data)
        },
        (error) => {
            console.error(error);
        },)
	}
	
	async sendData(data: string[][],host: string,port:number,offset: number,len: number,timeout: number){
	  for(let i = offset; i< offset+len;i++){
	    if(data[i].length == 0){
	      continue;
	    }

	    this.client.send(data[i].join(''), host, port);
	    await Sleep(timeout);
	  }
	}
	sendDataSideBySide() {
		
	}
}




export { useEspTouch, EsptouchTask, UDPSocket, getIP }